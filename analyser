#!/usr/bin/env python3
import os
import sys
from datetime import date, timedelta

def daterange(start_date, end_date):
    for n in range(int((end_date - start_date).days)):
        yield start_date + timedelta(n)

def remove_samples_empty_imports(imports_dir):
    import os
    import shutil
    for filename in os.listdir(imports_dir):
        # Remove if file has size == 29
        if os.path.getsize(imports_dir + filename) == 29:
            os.remove(imports_dir + filename)

from nastyware_analyser.download import download_pe_files
from nastyware_analyser.information import export_samples_information, get_hash_information
from nastyware_analyser.imports import export_samples_import
from nastyware_analyser.stats import print_stats_empty_imports

if __name__== '__main__':
    # DOWNLOAD FILES FROM DATE RANGE
    # start_date = date(2020, 2, 24)
    # end_date = date(2020, 2, 29)

    # for single_date in daterange(start_date, end_date):
    #     print(single_date.strftime("%Y-%m-%d"))
    #     download_pe_files(single_date.strftime("%Y-%m-%d"))

    # GET SAMPLE INFORMATION
    # export_samples_information('./information.csv')

    # GET SAMPLE IMPORTS
    # export_samples_import('./samples/', './imports/', malware=True)

    # PRINT INFORMATION ABOUT EMPTY IMPORTS
    # print_stats_empty_imports('./imports/')

    # REMOVE SAMPLES WITH EMPTY IMPORTS
    # remove_samples_empty_imports('./imports/')

    # RUN DAMICORE ON SAMPLES
    # ret = os.system('python3 ./damicore-python/damicore.py ./imports/ --ncd-output ./damicore-python/results/ncd-matrix.phylip --format phylip --tree-output ./damicore-python/results/tree.newick --graph-image ./damicore-python/results/tree-image.png --output ./damicore-python/results/final.clusters --compress gzip')

    # if ret != 0:
    #     print('Error running damicore')
    #     sys.exit(1)
    
    # Running FigTree
    # ret = os.system('/mnt/c/Users/joaop/Downloads/FigTree\ v1.4.4/FigTree\ v1.4.4.exe ./damicore-python/results/tree.newick')

    get_hash_information("87b0a6a233ea403868b58ac1960ad6799785a06b684c38e5517a9254a544145a")
