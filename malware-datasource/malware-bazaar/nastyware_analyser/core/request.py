import requests
import pyzipper
import pandas as pd
import sys
import os
import re
import shutil

API_BASE_URL = 'https://mb-api.abuse.ch/api/v1/'
DOWNLOAD_ROOT_PATH = 'https://datalake.abuse.ch/malware-bazaar/daily'
ZIP_PASSWORD = b'infected'

TEMPORARY_DIRECTORY = './tmp'

def download_file(file_url, output_filepath):
    response = requests.get(file_url)
    with open(output_filepath, 'wb') as f:
        f.write(response.content)

def request_information(hash):
    data = {
        "query": "get_info",
        "hash": hash
    }

    response = requests.post(API_BASE_URL, data=data, timeout=15)

    if response.status_code != 200:
        print(f'Error: {response.status_code} - {response.reason}')
        sys.exit(1)

    response_json = response.json()

    return pd.json_normalize(response_json['data'])


def request_pe_files(date, output_dir):
    if re.match(r'\d{4}-\d{2}-\d{2}', date) is None:
        raise Exception('Invalid date format')

    if not os.path.exists(TEMPORARY_DIRECTORY):
        os.makedirs(TEMPORARY_DIRECTORY)

    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    filename = f'{date}.zip'
    remote_zip_fileurl = f'{DOWNLOAD_ROOT_PATH}/{filename}'
    local_zip_filepath = f'{TEMPORARY_DIRECTORY}/{filename}'

    download_file(file_url=remote_zip_fileurl, output_filepath=local_zip_filepath)

    with pyzipper.AESZipFile(local_zip_filepath) as zf:
        zf.pwd = ZIP_PASSWORD
        zf.extractall(TEMPORARY_DIRECTORY)

    for filename in os.listdir(TEMPORARY_DIRECTORY):
        if filename.endswith('.exe') or filename.endswith('.dll'):
            shutil.move(f'{TEMPORARY_DIRECTORY}/{filename}', f'{output_dir}/{filename}')
        else:
            os.remove(f'{TEMPORARY_DIRECTORY}/{filename}')
    
    os.removedirs(TEMPORARY_DIRECTORY)
