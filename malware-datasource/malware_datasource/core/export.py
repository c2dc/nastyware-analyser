import requests
import pandas as pd
import os
import sys
import pefile

def export_dataset(sample_dir, output_filename, datasource):
    samples = os.listdir(sample_dir)

    samples_len = len(samples)

    if samples_len == 0:
        print('No samples to export dataset.')
        sys.exit(1)

    append = os.path.exists(output_filename)

    with open(output_filename, 'a' if append else 'w') as f:
        for index, sample in enumerate(samples):
            sys.stdout.write("\r100%\033[K\n")
            print(f'\r[{index + 1}/{samples_len}] Getting information of hash: {sample}', end='')
            filehash = sample.split('.')[0]
            dataset = datasource.request_information(hash=filehash)
            
            if dataset is None:
                continue
            
            f.write(dataset.to_csv(header=True if index == 0 and not append else False, index=False))

        print()

def export_files_imports(files_dir, output_dir, malware=False):
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    files = os.listdir(files_dir)
    
    files_len = len(files)

    if files_len == 0:
        print('No files to export function imports.')
        sys.exit(1)

    prefix = "R" if malware else "G"
    for file in files:
        if os.path.exists(f'{output_dir}/{prefix}-{file}'):
            continue

        try:
            pe = pefile.PE(f'{files_dir}/{file}')
            with open(f'{output_dir}/{prefix}-{file}', 'w') as f:
                for entry in pe.DIRECTORY_ENTRY_IMPORT:
                    for function in entry.imports:
                        if function.name != None:
                            f.write(f'{entry.dll.decode().lower()} {function.name.decode()}\n')

        except AttributeError:
            print(f'{file} does not have imports.')

        except pefile.PEFormatError:
            print(f'{file} may not be a PE file.')